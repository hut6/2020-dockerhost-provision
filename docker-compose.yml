version: "3.7"

services:

    traefik:
        image: "traefik:v2.1"
        networks:
            - server_network
        deploy:
            mode: global
            restart_policy:
                condition: any
        command:
            - "--log.level=DEBUG"
            - "--api.insecure=false"
            - "--providers.docker=true"
            - "--providers.docker.exposedbydefault=false"
            - "--entrypoints.web.address=:80"
            - "--entrypoints.websecure.address=:443"
            - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
            - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
            - "--certificatesresolvers.myresolver.acme.email=team@hutsix.com.au"
            - "--certificatesresolvers.myresolver.acme.storage=/acme/acme.json"
            - "--metrics.prometheus=true"
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - traefik-data:/acme
        labels:
            traefik.enable: 'true'
            traefik.http.middlewares.redirector.redirectScheme.scheme: https
            traefik.http.middlewares.redirector.redirectScheme.permanent: 'true'
            traefik.http.routers.httpsredirect.rule: "HostRegexp(`{host:.+}`)"
            traefik.http.routers.httpsredirect.entryPoints: web
            traefik.http.routers.httpsredirect.middlewares: redirector
            traefik.http.routers.httpsredirect.priority: 1000
        logging:
            options:
                loki-tenant-id: "servernode"

    node_exporter:
        image: quay.io/prometheus/node-exporter
        hostname: ${HOST}
        deploy:
            mode: global
            restart_policy:
                condition: any
        networks:
            - node_network
        volumes:
            - /:/host:ro,rslave
        command:
            - "--path.rootfs=/host"
        logging:
            options:
                loki-tenant-id: "servernode"


    prometheus:
        image: prom/prometheus
        deploy:
            mode: global
            restart_policy:
                condition: any
        command: --config.file=/etc/prometheus/prometheus.yml
        networks:
            - server_network
            - node_network
        volumes:
            - "/root/2020-dockerhost-provision/config/prometheus/:/etc/prometheus/"
        labels:
            - "traefik.docker.network=server_network"
            - "traefik.enable=true"
            - "traefik.port=9090"
            - "traefik.http.routers.${STACK}-prom.rule=Host(`$HOST`)"
            - "traefik.http.routers.${STACK}-prom.tls.certresolver=myresolver"
        logging:
            options:
                loki-tenant-id: "servernode"

networks:
    server_network:
        name: server_network
        driver: overlay
    node_network:
        name: node_network
        driver: bridge


volumes:
    traefik-data:
