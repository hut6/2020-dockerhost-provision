version: "3.7"

services:

    traefik:
        image: "traefik:v2.2"
        networks:
            - server_network
            - node_network
        deploy:
            mode: global
            placement:
                constraints:
                    - node.role == manager
            restart_policy:
                condition: any
            labels:
                - "traefik.enable=true"
                - "traefik.http.middlewares.redirector.redirectScheme.scheme=https"
                - "traefik.http.middlewares.redirector.redirectScheme.permanent=true"
                - "traefik.http.services.httpsredirect.loadbalancer.server.port=80"
                - "traefik.http.routers.httpsredirect.rule=HostRegexp(`{host:.+}`)"
                - "traefik.http.routers.httpsredirect.entryPoints=web"
                - "traefik.http.routers.httpsredirect.middlewares=redirector"
                - "traefik.http.routers.httpsredirect.priority=1000"
        command:
            - "--log.level=INFO"
            - "--api.insecure=false"
            - "--providers.docker=true"
            - "--providers.docker.exposedbydefault=false"
            - "--providers.docker.swarmMode=true"
            - "--providers.docker.network=server_network"
            - "--entrypoints.web.address=:80"
            - "--entrypoints.websecure.address=:443"
            - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
            - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
            - "--certificatesresolvers.myresolver.acme.email=team@hutsix.com.au"
            - "--certificatesresolvers.myresolver.acme.storage=/acme/acme.json"
            - "--metrics.prometheus=true"
            - "--metrics.prometheus.addServicesLabels=true"
            - "--metrics.prometheus.addEntryPointsLabels=true"
            - "--metrics.prometheus.entryPoint=metrics"
            - "--entryPoints.metrics.address=:8082"
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - traefik-data:/acme
        logging:
            options:
                loki-tenant-id: "servernode"

    node_exporter:
        image: quay.io/prometheus/node-exporter
        deploy:
            mode: global
            restart_policy:
                condition: any
        networks:
            - node_network
        volumes:
            - /:/host:ro,rslave
        command:
            - "--path.rootfs=/host"
        logging:
            options:
                loki-tenant-id: "servernode"

    cadvisor:
        image: google/cadvisor:latest
        deploy:
            mode: global
            restart_policy:
                condition: any
        networks:
            - node_network
        volumes:
            - /:/rootfs:ro
            - /var/run:/var/run:rw
            - /sys:/sys:ro
            - /var/lib/docker/:/var/lib/docker:ro

    prometheus:
        image: prom/prometheus
        deploy:
            mode: global
            restart_policy:
                condition: any
        dns: 8.8.8.8
        command:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.retention.time=5m"
        networks:
            - node_network
        volumes:
            - "/etc/docker/prometheus/:/etc/prometheus/"
        logging:
            options:
                loki-tenant-id: "servernode"

networks:
    server_network:
        name: server_network
        driver: overlay
    node_network:
        name: node_network
        driver: overlay


volumes:
    traefik-data:
